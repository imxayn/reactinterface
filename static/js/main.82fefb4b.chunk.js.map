{"version":3,"sources":["components/ListAppointments.js","components/AddAppointments.js","components/SearchAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["ListAppointments","data","localStorage","getItem","JSON","parse","className","this","props","appointments","map","item","key","aptsId","onClick","delApts","contentEditable","suppressContentEditableWarning","onBlur","e","updateInfo","target","innerText","petName","date","aptDate","format","ownerName","aptNotes","Component","AddAppointments","state","aptTime","handleChange","bind","handleAdd","value","name","console","log","setState","preventDefault","tempApt","addAppointment","setItem","stringify","formDisplay","toggleDisplay","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","SearchAppointments","aria-label","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","App","myAppointments","lastIndex","queryTxt","deleteAppointments","tempApts","findIndex","apt","without","apts","unshift","fetch","then","respone","json","result","order","dir","filteredApts","sort","a","b","toLowerCase","filter","includes","classNameName","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0SA6DeA,E,iLAvDD,IAAD,OACCC,EAAOC,aAAaC,QAAQ,WAClBC,KAAKC,MAAMJ,GAE3B,OACI,yBAAKK,UAAU,mCAGX,6BACCC,KAAKC,MAAMC,aAAaC,IAAI,SAAAC,GAAI,OAEjC,yBAAKL,UAAU,0BAA0BM,IAAKD,EAAKE,QAC/C,yBAAKP,UAAU,QACX,4BAAQA,UAAU,mCAAmCQ,QAAS,kBAAI,EAAKN,MAAMO,QAAQJ,KAArF,MAGR,yBAAKL,UAAU,uBACX,yBAAKA,UAAU,mBACf,0BAAMA,UAAU,WAAWU,iBAAe,EAACC,gCAA8B,EACrEC,OACI,SAAAC,GAAC,OAAG,EAAKX,MAAMY,WAAW,UAAWD,EAAEE,OAAOC,UAAUX,EAAKE,UAGpEF,EAAKY,SANN,OAQA,0BAAMjB,UAAU,oBAChB,kBAAC,IAAD,CACIkB,KAAMb,EAAKc,QACXpB,MAAM,mBACNqB,OAAO,uBAKX,yBAAKpB,UAAU,cACX,0BAAMA,UAAU,cAAhB,WACA,0BAAMA,UAAU,WAAWU,iBAAe,EAACC,gCAA8B,EACzEC,OACI,SAAAC,GAAC,OAAG,EAAKX,MAAMY,WAAW,YAAaD,EAAEE,OAAOC,UAAUX,EAAKE,UAFnE,IAIDF,EAAKgB,YAER,yBAAKrB,UAAU,aAAaK,EAAKiB,mB,GA3CrBC,a,gBCuKjBC,E,YAtKV,aAAc,IAAD,8BACT,+CACKC,MAAM,CACPR,QAAQ,GACRI,UAAU,GACVF,QAAQ,GACRO,QAAQ,GACRJ,SAAS,IAEb,EAAKK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAVR,E,0EAaAf,GACT,IAAME,EAASF,EAAEE,OACXe,EAAOf,EAAOe,MACdC,EAAOhB,EAAOgB,KACpBC,QAAQC,IAAIF,EAAK,QAEjB9B,KAAKiC,SAAL,eACKH,EAAQD,M,gCAIPjB,GACPA,EAAEsB,iBACF,IAAIC,EAAU,CACVnB,QAAShB,KAAKwB,MAAMR,QACpBI,UAAWpB,KAAKwB,MAAMJ,UACtBF,QAASlB,KAAKwB,MAAMN,QAAUlB,KAAKwB,MAAMC,QACzCJ,SAAUrB,KAAKwB,MAAMH,UAEzBrB,KAAKC,MAAMmC,eAAeD,GAC1BnC,KAAKiC,SAAS,CACVjB,QAAS,GACTI,UAAW,GACXF,QAAS,GACTO,QAAQ,GACRJ,SAAU,KAEd1B,aAAa0C,QAAQ,UAAUxC,KAAKyC,UAAUH,M,+BAG9C,OACI,yBAAKpC,UAAW,yBAA2BC,KAAKC,MAAMsC,YAAc,GAAK,oBACzE,yBAAKxC,UAAU,mDAAmDQ,QAASP,KAAKC,MAAMuC,eACpF,8BAAM,kBAAC,IAAD,MAAN,yBAGF,yBAAKzC,UAAU,aACb,0BAAM0C,GAAG,UAAUC,YAAU,EAACC,SAAU3C,KAAK4B,WAC3C,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV6C,QAAQ,UACRC,UAAQ,GAHV,YAOA,yBAAK9C,UAAU,aACb,2BACE+C,KAAK,OACL/C,UAAU,eACV+B,KAAK,UACLiB,YAAY,aACZlB,MAAO7B,KAAKwB,MAAMR,QAClBgC,SAAUhD,KAAK0B,iBAKrB,yBAAK3B,UAAU,uBACb,2BACEA,UAAU,wCACV6C,QAAQ,aAFV,aAMA,yBAAK7C,UAAU,aACb,2BACE+C,KAAK,OACL/C,UAAU,eACV+B,KAAK,YACLiB,YAAY,eACZlB,MAAO7B,KAAKwB,MAAMJ,UAClB4B,SAAUhD,KAAK0B,iBAMrB,yBAAK3B,UAAU,uBACb,2BACEA,UAAU,wCACV6C,QAAQ,WAFV,QAMA,yBAAK7C,UAAU,YACb,2BACE+C,KAAK,OACL/C,UAAU,eACV+B,KAAK,UACLW,GAAG,UACHZ,MAAO7B,KAAKwB,MAAMN,QAClB8B,SAAUhD,KAAK0B,gBAKnB,2BACE3B,UAAU,wCACV6C,QAAQ,WAFV,QAMA,yBAAK7C,UAAU,YACb,2BACE+C,KAAK,OACL/C,UAAU,eACV+B,KAAK,UACLW,GAAG,UACHZ,MAAO7B,KAAKwB,MAAMC,QAClBuB,SAAUhD,KAAK0B,iBAOrB,yBAAK3B,UAAU,uBACb,2BAAOA,UAAU,yBAAyB6C,QAAQ,YAAlD,cAGA,yBAAK7C,UAAU,aACb,8BACEA,UAAU,eACVkD,KAAK,IACLC,KAAK,KACLpB,KAAK,WACLW,GAAG,WACHM,YAAY,oBACZlB,MAAO7B,KAAKwB,MAAMH,SAClB2B,SAAUhD,KAAK0B,iBAMrB,yBAAK3B,UAAU,4BACb,yBAAKA,UAAU,yBACb,4BACE+C,KAAK,SACL/C,UAAU,mCAFZ,4B,GAxJWuB,aC+EhB6B,E,iLA/ED,IAAD,OACL,OACI,yBAAKpD,UAAU,uDACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,eACb,2BACE0C,GAAG,aACHK,KAAK,OACL/C,UAAU,eACVqD,aAAW,sBACXJ,SAAUhD,KAAKC,MAAMyB,eAEvB,yBAAK3B,UAAU,sBACb,4BACE+C,KAAK,SACL/C,UAAU,kCACVsD,cAAY,WACZC,gBAAc,OACdC,gBAAc,SALhB,YAOW,0BAAMxD,UAAU,WAG3B,yBAAKA,UAAU,+CACb,4BACEA,UAAW,0BACe,YAAvBC,KAAKC,MAAMuD,QAAwB,SAAW,IAGjDjD,QAAW,SAAAK,GAAC,OAAG,EAAKX,MAAMwD,YAAY,UAAW,EAAKxD,MAAMyD,WAC5DC,KAAK,KANP,YASA,4BAAQ5D,UAAW,0BACK,YAAvBC,KAAKC,MAAMuD,QAAwB,SAAW,IAE/CG,KAAK,IACPpD,QAAW,SAAAK,GAAC,OAAG,EAAKX,MAAMwD,YAAY,UAAW,EAAKxD,MAAMyD,YAJ1D,QASA,4BAAQ3D,UAAW,0BACK,cAAvBC,KAAKC,MAAMuD,QAA0B,SAAW,IAEjDG,KAAK,IACPpD,QAAW,SAAAK,GAAC,OAAG,EAAKX,MAAMwD,YAAY,YAAa,EAAKxD,MAAMyD,YAJ5D,SASA,yBAAKE,KAAK,YAAY7D,UAAU,qBAChC,4BAAQA,UAAW,0BACM,QAAxBC,KAAKC,MAAMyD,SAAqB,SAAW,IAE5CC,KAAK,IACPpD,QAAW,SAAAK,GAAC,OAAG,EAAKX,MAAMwD,YAAY,EAAKxD,MAAMuD,QAAS,EAAKvD,MAAMyD,YAJnE,OASA,4BAAQ3D,UAAW,0BACM,SAAxBC,KAAKC,MAAMyD,SAAsB,SAAW,IAE7CC,KAAK,IACPpD,QAAW,SAAAK,GAAC,OAAG,EAAKX,MAAMwD,YAAY,EAAKxD,MAAMuD,QAAS,EAAKvD,MAAMyD,YAJnE,iB,GA9DcpC,a,OC8KnBuC,E,YAzKb,aAAc,IAAD,8BACX,+CACKrC,MAAQ,CACXsC,eAAgB,GAChBC,UAAW,EACXL,SAAU,OACVF,QAAQ,YACRjB,aAAa,EACbyB,SAAS,IAGX,EAAKC,mBAAqB,EAAKA,mBAAmBtC,KAAxB,gBAC1B,EAAKS,eAAiB,EAAKA,eAAeT,KAApB,gBACtB,EAAKa,cAAgB,EAAKA,cAAcb,KAAnB,gBACrB,EAAK8B,YAAc,EAAKA,YAAY9B,KAAjB,gBACnB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,gBAhBP,E,6EAsBX3B,KAAKiC,SAAS,CACZM,aAAcvC,KAAKwB,MAAMe,gB,iCAIlBT,EAAKD,EAAMY,GACpBV,QAAQC,IAAI,MACZ,IAAIkC,EAAWlE,KAAKwB,MAAMsC,eAE1BI,EADeC,oBAAUnE,KAAKwB,MAAMsC,eAAe,CAACxD,OAAQmC,KACzCX,GAAQD,EAC3BE,QAAQC,IAAIF,EAAK,4BACjB9B,KAAKiC,SAAS,CACZ6B,eAAgBI,M,mCAKPtD,GACXmB,QAAQC,IAAIpB,EAAEE,OAAOe,OACrB7B,KAAKiC,SAAS,CACZ+B,SAAUpD,EAAEE,OAAOe,U,yCAKJuC,GACjB,IAAIF,EAAWlE,KAAKwB,MAAMsC,eAC1BI,EAAWG,kBAAQH,EAASE,GAC5BpE,KAAKiC,SAAS,CACZ6B,eAAgBI,M,qCAILI,GACb,IAAIJ,EAAWlE,KAAKwB,MAAMsC,eAC1BI,EAASK,QAAQD,GACjBtE,KAAKiC,SAAS,CACZ6B,eAAgBI,M,0CAIE,IAAD,OAClBM,MAAM,eACNC,KAAK,SAAAC,GAAO,OAAIA,EAAQC,SACxBF,KAAK,SAAAG,GACJ,IAAIN,EAAOM,EAAOzE,IAAI,SAAAC,GAKpB,OAJAA,EAAKE,OAAS,EAAKkB,MAAMuC,UACzB,EAAK9B,SAAS,CACZ8B,UAAW,EAAKvC,MAAMuC,UAAW,IAE5B3D,IAIT,EAAK6B,SAAS,CACZ6B,eAAgBQ,Q,kCAKVO,EAAMC,GAChB9E,KAAKiC,SAAS,CACZuB,QAASqB,EACTnB,SAAUoB,M,+BAIJ,IACJD,EADG,OAEHE,EAAe/E,KAAKwB,MAAMsC,eA+B9B,OA7BEe,EADyB,QAAxB7E,KAAKwB,MAAMkC,SACJ,GAGC,EAGXqB,EAAeA,EAAaC,KAAK,SAACC,EAAEC,GAChC,OAAGD,EAAE,EAAKzD,MAAMgC,SAAS2B,cACvBD,EAAE,EAAK1D,MAAMgC,SAAS2B,eAGd,EAAIN,EAGL,EAAIA,IAEdO,OAAO,SAAAhF,GACR,OACEA,EAAI,QACD+E,cACAE,SAAS,EAAK7D,MAAMwC,SAASmB,gBAChC/E,EAAI,UACD+E,cACAE,SAAS,EAAK7D,MAAMwC,SAASmB,gBAChC/E,EAAI,SACD+E,cACAE,SAAS,EAAK7D,MAAMwC,SAASmB,iBAIlC,6BACA,0BAAMpF,UAAU,gBAAgB0C,GAAG,cACnC,yBAAK1C,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKuF,cAAc,sBACjB,yBAAKA,cAAc,aACnB,6BACA,kBAAC,EAAD,CACE9B,QAASxD,KAAKwB,MAAMgC,QACpBE,SAAU1D,KAAKwB,MAAMkC,SACrBD,YAAazD,KAAKyD,YAClB/B,aAAc1B,KAAK0B,gBAIrB,6BACE,kBAAC,EAAD,CACAU,eAAgBpC,KAAKoC,eACrBG,YAAavC,KAAKwB,MAAMe,YACxBC,cAAiBxC,KAAKwC,iBAItB,6BACE,kBAAC,EAAD,CACAtC,aAAc6E,EACdhB,UAAW/D,KAAKwB,MAAMuC,UACtBvD,QAAWR,KAAKiE,mBAChBpD,WAAYb,KAAKa,wB,GAxJfS,aCIEiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCRNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzB,KAAK,SAAA0B,GACjCA,EAAaC,gB","file":"static/js/main.82fefb4b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../css/App.css'\nimport Moment from 'react-moment'\n\n\n class ListAppointments extends Component {\n    render() {\n        const data = localStorage.getItem('tempApt');\n        const newData = JSON.parse(data)\n\n        return (\n            <div className=\"appointment-list item-list mb-3\">\n            \n\n                <br />\n                {this.props.appointments.map(item=>(\n                \n                <div className=\"pet-item col media py-3\" key={item.aptsId}>\n                    <div className=\"mr-3\">\n                        <button className=\"pet-delete btn btn-sm btn-danger\" onClick={()=>this.props.delApts(item)}>X</button>\n                    </div>\n    \n                <div className=\"pet-info media-body\">\n                    <div className=\"pet-head d-flex\">\n                    <span className=\"pet-name\" contentEditable suppressContentEditableWarning \n                        onBlur={\n                            e=> this.props.updateInfo('petName', e.target.innerText,item.aptsId)\n                        }\n                    >\n                    {item.petName}</span>\n                    &nbsp;\n                    <span className=\"apt-date ml-auto\">\n                    <Moment \n                        date={item.aptDate}\n                        parse=\"YYYY-MM-dd hh:mm\"\n                        format=\"d-MMM-YYYY h:mma\"\n                    />\n                    </span>\n                    </div>\n  \n                    <div className=\"owner-name\">\n                        <span className=\"label-item\">Owner: </span>\n                        <span className=\"pet-name\" contentEditable suppressContentEditableWarning \n                        onBlur={\n                            e=> this.props.updateInfo('ownerName', e.target.innerText,item.aptsId)\n                        }\n                    > {item.ownerName}</span>\n                    </div>\n                    <div className=\"apt-notes\">{item.aptNotes}</div>\n                    </div>\n                   \n                </div>\n                \n                \n            ))}\n            \n        </div>\n        )\n    }\n}\n\nexport default ListAppointments\n","import React, { Component } from 'react'\nimport '../css/App.css'\nimport { FaPlus } from \"react-icons/fa\";\n\n\n class AddAppointments extends Component {\n     constructor(){\n         super();\n         this.state={\n             petName:'',\n             ownerName:'',\n             aptDate:'',\n             aptTime:'',\n             aptNotes:''\n         }\n         this.handleChange = this.handleChange.bind(this)\n         this.handleAdd = this.handleAdd.bind(this)\n     }\n\n     handleChange(e){\n         const target = e.target;\n         const value= target.value;\n         const name = target.name\n         console.log(name,\"name\")\n\n         this.setState({\n             [name] : value\n         })\n\n     }\n     handleAdd(e){\n        e.preventDefault()\n        let tempApt = {\n            petName: this.state.petName,\n            ownerName: this.state.ownerName,\n            aptDate: this.state.aptDate + this.state.aptTime,\n            aptNotes: this.state.aptNotes,\n        }\n        this.props.addAppointment(tempApt)\n        this.setState({\n            petName: '',\n            ownerName: '',\n            aptDate: '',\n            aptTime:'',\n            aptNotes: '',\n        })\n        localStorage.setItem('tempApt',JSON.stringify(tempApt)) //set new appointment to localStorge\n     }\n    render() {\n        return (\n            <div className={'card textcenter mt-3 ' + (this.props.formDisplay ? '' : 'add-appointment')}>\n            <div className=\"apt-addheading card-header bg-primary text-white\" onClick={this.props.toggleDisplay}>\n              <span><FaPlus /> &nbsp;Add Appointment</span>\n            </div>\n  \n            <div className=\"card-body\">\n              <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"petName\"\n                    readOnly\n                  >\n                    Pet Name\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"petName\"\n                      placeholder=\"Pet's Name\"\n                      value={this.state.petName}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"ownerName\"\n                  >\n                    Pet Owner\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"ownerName\"\n                      placeholder=\"Owner's Name\"\n                      value={this.state.ownerName}\n                      onChange={this.handleChange}\n\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"aptDate\"\n                  >\n                    Date\n                  </label>\n                  <div className=\"col-md-4\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      name=\"aptDate\"\n                      id=\"aptDate\"\n                      value={this.state.aptDate}\n                      onChange={this.handleChange}\n\n\n                    />\n                  </div>\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"aptTime\"\n                  >\n                    Time\n                  </label>\n                  <div className=\"col-md-4\">\n                    <input\n                      type=\"time\"\n                      className=\"form-control\"\n                      name=\"aptTime\"\n                      id=\"aptTime\"\n                      value={this.state.aptTime}\n                      onChange={this.handleChange}\n\n\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row\">\n                  <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n                    Apt. Notes\n                  </label>\n                  <div className=\"col-md-10\">\n                    <textarea\n                      className=\"form-control\"\n                      rows=\"4\"\n                      cols=\"50\"\n                      name=\"aptNotes\"\n                      id=\"aptNotes\"\n                      placeholder=\"Appointment Notes\"\n                      value={this.state.aptNotes}\n                      onChange={this.handleChange}\n\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row mb-0\">\n                  <div className=\"offset-md-2 col-md-10\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary d-block ml-auto\"\n                    >\n                      Add Appointment\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default AddAppointments\n","import React, { Component } from 'react'\nimport '../css/App.css'\n\n\n class SearchAppointments extends Component {\n    render() {\n        return (\n            <div className=\"search-appointments row justify-content-center my-4\">\n            <div className=\"col-md-6\">\n              <div className=\"input-group\">\n                <input\n                  id=\"SearchApts\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-label=\"Search Appointments\"\n                  onChange={this.props.handleChange}\n                />\n                <div className=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary dropdown-toggle\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Sort by: <span className=\"caret\" />\n                  </button>\n    \n                  <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n                    <button \n                      className={'sort-by dropdown-item ' +\n                        (this.props.orderBy === 'petName' ? 'active' : '')\n\n                      }\n                      onClick = {e=> this.props.changeOrder('petName', this.props.orderDir)} \n                      href=\"#\">\n                      Pet Name\n                    </button>\n                    <button className={'sort-by dropdown-item ' +\n                    (this.props.orderBy === 'aptDate' ? 'active' : '')\n\n                  } href=\"#\"\n                  onClick = {e=> this.props.changeOrder('aptDate', this.props.orderDir)} \n\n                  >\n                      Date\n                    </button>\n                    <button className={'sort-by dropdown-item ' +\n                    (this.props.orderBy === 'ownerName' ? 'active' : '')\n\n                  } href=\"#\"\n                  onClick = {e=> this.props.changeOrder('ownerName', this.props.orderDir)} \n\n                  >\n                      Owner\n                    </button>\n                    <div role=\"separator\" className=\"dropdown-divider\" />\n                    <button className={'sort-by dropdown-item ' +\n                    (this.props.orderDir === 'asc' ? 'active' : '')\n\n                  } href=\"#\"\n                  onClick = {e=> this.props.changeOrder(this.props.orderBy, this.props.orderDir)} \n\n                  >\n                      Asc\n                    </button>\n                    <button className={'sort-by dropdown-item ' +\n                    (this.props.orderDir === 'desc' ? 'active' : '')\n\n                  } href=\"#\"\n                  onClick = {e=> this.props.changeOrder(this.props.orderBy, this.props.orderDir)} \n\n                  >\n                      Desc\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default SearchAppointments\n","import React, {Component} from 'react';\nimport '../css/App.css'\nimport ListAppointments from '../components/ListAppointments'\nimport AddAppointments from '../components/AddAppointments'\nimport SearchAppointments from './SearchAppointments';\nimport {without, findIndex} from 'lodash'\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      myAppointments: [],\n      lastIndex: 0,\n      orderDir: 'desc',\n      orderBy:'ownerName',\n      formDisplay: false,\n      queryTxt:''\n    }\n\n    this.deleteAppointments = this.deleteAppointments.bind(this)\n    this.addAppointment = this.addAppointment.bind(this)\n    this.toggleDisplay = this.toggleDisplay.bind(this)\n    this.changeOrder = this.changeOrder.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.updateInfo = this.updateInfo.bind(this)\n\n\n  }\n\n  toggleDisplay(){\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    })\n  }\n\n  updateInfo(name,value,id){\n    console.log(\"--\")\n    let tempApts = this.state.myAppointments\n    let aptIndex = findIndex(this.state.myAppointments,{aptsId: id});\n    tempApts[aptIndex][name] = value\n    console.log(name,\"tempApts[aptIndex][name]\")\n    this.setState({\n      myAppointments: tempApts\n    })\n\n  }\n\n  handleChange(e){\n    console.log(e.target.value)\n    this.setState({\n      queryTxt: e.target.value\n    })\n\n  }\n\n  deleteAppointments(apt){\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts,apt)  //lodash method to delete object\n    this.setState({\n      myAppointments: tempApts\n    })\n  }\n\n  addAppointment(apts){\n    let tempApts = this.state.myAppointments;\n    tempApts.unshift(apts)\n    this.setState({\n      myAppointments: tempApts\n    })\n  }\n\n   componentDidMount() {\n     fetch('./data.json')\n    .then(respone => respone.json())\n    .then(result => {\n      let apts = result.map(item=>{\n        item.aptsId = this.state.lastIndex;  //adding new object keys and values in data\n        this.setState({\n          lastIndex: this.state.lastIndex +1\n        })\n        return item;\n      })\n      \n      \n      this.setState({\n        myAppointments: apts\n      })\n    })\n  }\n\n  changeOrder(order,dir){\n    this.setState({\n      orderBy: order,\n      orderDir: dir\n    })\n  }\n  \n  render() {\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if(this.state.orderDir === 'asc'){\n      order = 1\n    }\n    else{\n      order = -1\n    }\n\n    filteredApts = filteredApts.sort((a,b) => {\n        if(a[this.state.orderBy].toLowerCase() < \n          b[this.state.orderBy].toLowerCase()\n        ){\n        \n          return -1 * order\n        }\n        else{\n          return 1 * order\n        }\n    }).filter(item => {\n      return(\n        item['petName']\n          .toLowerCase()\n          .includes(this.state.queryTxt.toLowerCase()) ||\n        item['ownerName']\n          .toLowerCase()\n          .includes(this.state.queryTxt.toLowerCase()) ||\n        item['aptNotes']\n          .toLowerCase()\n          .includes(this.state.queryTxt.toLowerCase())\n      )\n    })\n    return (\n      <div>\n      <main className=\"page bg-white\" id=\"petratings\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div classNameName=\"col-md-12 bg-white\">\n            <div classNameName=\"container\">\n            <div>\n            <SearchAppointments\n              orderBy={this.state.orderBy}\n              orderDir={this.state.orderDir}\n              changeOrder={this.changeOrder}\n              handleChange={this.handleChange}\n\n            />\n            </div>\n            <div>\n              <AddAppointments \n              addAppointment={this.addAppointment}\n              formDisplay={this.state.formDisplay}\n              toggleDisplay = {this.toggleDisplay}\n              />\n              \n              </div>\n              <div>\n                <ListAppointments \n                appointments={filteredApts}\n                lastIndex={this.state.lastIndex}\n                delApts = {this.deleteAppointments}\n                updateInfo={this.updateInfo}\n                \n                />\n              \n              </div>\n              \n             \n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery'\nimport 'popper.js/dist/umd/popper.js'\nimport 'bootstrap/dist/js/bootstrap.js'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}